name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Configure npm for npmjs.org
        run: |
          echo "registry=https://registry.npmjs.org" > .npmrc
          echo "@pppp606:registry=https://registry.npmjs.org" >> .npmrc
      
      - run: npm ci
      
      - run: npm run lint
      
      - run: npm run typecheck
      
      - run: npm run test:coverage
      
      - run: npm run build
      
      - name: Verify build outputs
        run: |
          test -f dist/index.js && test -f dist/index.d.ts
          echo "‚úÖ Build outputs verified"

      - name: Detect authentication method
        id: auth
        run: |
          if [[ -n "$ACTIONS_ID_TOKEN_REQUEST_URL" && -n "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" ]]; then
            echo "method=oidc" >> $GITHUB_OUTPUT
            echo "üîê Using OIDC authentication for publishing"
          elif [[ -n "$NPM_TOKEN" ]]; then
            echo "method=npm-token" >> $GITHUB_OUTPUT
            echo "üîë Using NPM_TOKEN authentication for publishing"
          else
            echo "‚ùå No authentication method available"
            exit 1
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish with OIDC
        if: steps.auth.outputs.method == 'oidc'
        run: npm publish --access public --provenance --registry=https://registry.npmjs.org

      - name: Publish with NPM Token
        if: steps.auth.outputs.method == 'npm-token'
        run: npm publish --access public --registry=https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Create GitHub Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            üéâ New release published to npm!
            
            ### Installation
            ```bash
            npm install @pppp606/ink-chart@${{ github.ref_name }}
            ```
            
            ### Demo
            ```bash
            npx @pppp606/ink-chart-demo
            ```
          draft: false
          prerelease: false