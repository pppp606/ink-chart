name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Configure npm for npmjs.org
        run: |
          echo "registry=https://registry.npmjs.org" > .npmrc
          echo "@pppp606:registry=https://registry.npmjs.org" >> .npmrc
      
      - run: npm ci
      
      - run: npm run lint
      
      - run: npm run typecheck
      
      - run: npm run test:coverage
      
      - run: npm run build
      
      - name: Verify build outputs
        run: |
          test -f dist/index.js && test -f dist/index.d.ts
          echo "✅ Build outputs verified"

      - name: Validate and detect authentication method
        id: auth
        run: |
          # Enhanced authentication detection with validation

          echo "🔍 Validating authentication environment..."

          # Check for OIDC environment variables
          if [[ -n "$ACTIONS_ID_TOKEN_REQUEST_URL" && -n "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" ]]; then
            echo "✅ OIDC environment variables detected"

            # Validate OIDC URL format
            if [[ "$ACTIONS_ID_TOKEN_REQUEST_URL" == *"actions.githubusercontent.com"* ]] || [[ "$ACTIONS_ID_TOKEN_REQUEST_URL" == *"vstoken.actions.githubusercontent.com"* ]]; then
              echo "✅ OIDC URL format validated"

              # Validate GitHub context
              if [[ -n "$GITHUB_REPOSITORY" && -n "$GITHUB_REF" && -n "$GITHUB_SHA" ]]; then
                echo "✅ GitHub context validated"
                echo "method=oidc" >> $GITHUB_OUTPUT
                echo "🔐 Using OIDC authentication for secure publishing"
                echo "📊 Repository: $GITHUB_REPOSITORY"
                echo "📊 Reference: $GITHUB_REF"
                echo "📊 SHA: $GITHUB_SHA"
              else
                echo "❌ Missing GitHub context variables"
                exit 1
              fi
            else
              echo "❌ Invalid OIDC URL format"
              exit 1
            fi

          # Fallback to NPM Token (transitional support)
          elif [[ -n "$NPM_TOKEN" ]]; then
            echo "⚠️  Using NPM_TOKEN authentication (legacy mode)"
            echo "💡 Consider migrating to OIDC for enhanced security"
            echo "method=npm-token" >> $GITHUB_OUTPUT
            echo "🔑 NPM_TOKEN authentication configured"

          else
            echo "❌ No authentication method available"
            echo "💡 Required: Either OIDC (id-token: write permission) or NPM_TOKEN secret"
            echo "📖 See docs/OIDC-SETUP.md for migration guide"
            exit 1
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Validate provenance requirements
        if: steps.auth.outputs.method == 'oidc'
        run: |
          echo "🔍 Validating provenance attestation requirements..."

          # Validate required environment for provenance
          if [[ -z "$GITHUB_REPOSITORY" || -z "$GITHUB_REF" || -z "$GITHUB_SHA" ]]; then
            echo "❌ Missing GitHub context variables required for provenance"
            echo "📊 GITHUB_REPOSITORY: ${GITHUB_REPOSITORY:-'missing'}"
            echo "📊 GITHUB_REF: ${GITHUB_REF:-'missing'}"
            echo "📊 GITHUB_SHA: ${GITHUB_SHA:-'missing'}"
            exit 1
          fi

          # Validate OIDC environment
          if [[ -z "$ACTIONS_ID_TOKEN_REQUEST_URL" || -z "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" ]]; then
            echo "❌ OIDC environment not properly configured for provenance"
            exit 1
          fi

          echo "✅ Provenance requirements validated successfully"
          echo "🔐 Repository: $GITHUB_REPOSITORY"
          echo "🏷️  Reference: $GITHUB_REF"
          echo "📋 Commit SHA: $GITHUB_SHA"

      - name: Publish with OIDC
        if: steps.auth.outputs.method == 'oidc'
        run: |
          echo "🚀 Publishing with OIDC authentication..."
          echo "📦 Package: @pppp606/ink-chart"
          echo "🏷️  Version: $(node -p "require('./package.json').version")"
          echo "🔐 Using provenance for supply chain security"
          echo "📋 Generating cryptographic attestation..."

          # Attempt OIDC publishing with detailed output
          if npm publish --access public --provenance --registry=https://registry.npmjs.org; then
            echo "✅ Successfully published with OIDC!"
            echo "🔒 Package published with cryptographic provenance"
            echo "📋 Provenance attestation generated and signed"
            echo "🔍 Provenance details available at: https://npmjs.com/package/@pppp606/ink-chart"
            echo "🛡️  Supply chain security: Enhanced with attestation"
          else
            echo "❌ OIDC publishing with provenance failed"
            echo "🔍 Checking OIDC and provenance configuration..."
            echo "📖 Troubleshooting guide: docs/OIDC-SETUP.md"
            echo "💡 Ensure id-token: write permission is set"
            exit 1
          fi

      - name: Publish with NPM Token (Legacy)
        if: steps.auth.outputs.method == 'npm-token'
        run: |
          echo "🚀 Publishing with NPM_TOKEN authentication..."
          echo "⚠️  WARNING: NPM_TOKEN is a legacy authentication method"
          echo "📦 Package: @pppp606/ink-chart"
          echo "🏷️  Version: $(node -p "require('./package.json').version")"
          echo "💡 Recommendation: Migrate to OIDC for enhanced security"
          echo "🔒 Note: Provenance attestation not available with NPM_TOKEN"

          # Attempt NPM token publishing (without provenance)
          if npm publish --access public --registry=https://registry.npmjs.org; then
            echo "✅ Successfully published with NPM_TOKEN!"
            echo "📖 Migration guide: docs/OIDC-SETUP.md"
            echo "🛡️  For provenance attestation, migrate to OIDC authentication"
          else
            echo "❌ NPM_TOKEN publishing failed"
            echo "🔍 Check NPM_TOKEN secret configuration"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Create GitHub Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            🎉 New release published to npm!
            
            ### Installation
            ```bash
            npm install @pppp606/ink-chart@${{ github.ref_name }}
            ```
            
            ### Demo
            ```bash
            npx ink-chart-demo
            ```
          draft: false
          prerelease: false